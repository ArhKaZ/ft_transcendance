services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '8080:80'
      - '8443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certificates:/etc/ssl/certs
      - ./spa:/app/spa
      - ./media:/app/media
    depends_on:
      - django
    networks:
      - trans_network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - ./init_redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6378:6378"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - trans_network

  django:
    container_name: django
    build:
      context: ./init_django/
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - POSTGRES_DB=db_trans
      - POSTGRES_USER=lgabet
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_PORT=6378
    depends_on:
      - db_postgre
      - redis
    networks:
      - trans_network
    command: ./init_django/script.sh db_postgre

  db_postgre:
    container_name: db_postgre
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=lgabet # cree un user
      - POSTGRES_PASSWORD=pwd # cree son password
      - POSTGRES_DB=db_trans # cree une db
    ports:
      - "5432:5432"
    volumes:
      # - db_postgre:/root/42/ft_transcendance/Backend/dbVolumes/
      - db_postgre:/var/lib/postgresql/data
      - ./init_db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trans_network

volumes:
  db_postgre:
    driver: local
  media_volume:

networks:
  trans_network:
    driver: bridge